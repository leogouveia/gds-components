trigger:
  branches:
    include:
      - main
      - develop

pr:
  branches:
    include:
      - main
      - develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  NODE_VERSION: '20.x'

stages:
  - stage: Test
    displayName: 'Test and Quality Checks'
    jobs:
      - job: Test
        displayName: 'Run Tests'
        strategy:
          matrix:
            node18:
              nodeVersion: '18.x'
            node20:
              nodeVersion: '20.x'

        steps:
          - task: NodeTool@0
            displayName: 'Use Node.js $(nodeVersion)'
            inputs:
              versionSpec: $(nodeVersion)

          - script: |
              npm ci
            displayName: 'Install dependencies'

          - script: |
              npm run lint
            displayName: 'Run linting'

          - script: |
              npm run format:check
            displayName: 'Check formatting'

          - script: |
              npm run type-check
            displayName: 'Type checking'

          - script: |
              npm run build:lib
            displayName: 'Build library'

          - script: |
              npm test
            displayName: 'Run tests'

  - stage: Security
    displayName: 'Security Scan'
    dependsOn: Test
    condition: succeeded()
    jobs:
      - job: SecurityScan
        displayName: 'Security Analysis'

        steps:
          - task: NodeTool@0
            displayName: 'Use Node.js $(NODE_VERSION)'
            inputs:
              versionSpec: $(NODE_VERSION)

          - script: |
              npm ci
            displayName: 'Install dependencies'

          - script: |
              npm audit --audit-level=moderate
            displayName: 'Run security audit'

          - script: |
              npm audit fix --dry-run
            displayName: 'Check for security fixes'
            continueOnError: true

  - stage: Build
    displayName: 'Build and Package'
    dependsOn: Test
    condition: succeeded()
    jobs:
      - job: Build
        displayName: 'Build Library'

        steps:
          - task: NodeTool@0
            displayName: 'Use Node.js $(NODE_VERSION)'
            inputs:
              versionSpec: $(NODE_VERSION)

          - script: |
              npm ci
            displayName: 'Install dependencies'

          - script: |
              npm run build:lib
            displayName: 'Build library'

          - script: |
              echo "Build completed successfully"
              ls -la packages/ui-components/dist/
            displayName: 'Verify build artifacts'

  - stage: Deploy
    displayName: 'Deploy'
    dependsOn: Build
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - deployment: DeployToStaging
        displayName: 'Deploy to Staging'
        environment: 'staging'
        strategy:
          runOnce:
            deploy:
              steps:
                - script: |
                    echo "Deploying to staging environment..."
                    echo "Build.SourceBranch: $(Build.SourceBranch)"
                    echo "Build.SourceVersion: $(Build.SourceVersion)"
                    # Add your deployment steps here
                    # Example: npm publish, deploy to CDN, etc.
                  displayName: 'Deploy to staging'

                - script: |
                    echo "Running smoke tests..."
                    # Add smoke tests here
                  displayName: 'Smoke tests'
                  continueOnError: true
